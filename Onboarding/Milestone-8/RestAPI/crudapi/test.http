POST http://localhost:3000/RetNumberController/retNumberRoute
Content-Type: application/json

{
  "value": 40
}
###

GET http://localhost:3000/RetItemController/1


###

### CREATE
POST http://localhost:3000/items
Content-Type: application/json

{
  "name": "Alpha",
  "description": "first",
  "quantity": 2
}

### LIST
GET http://localhost:3000/items

### GET ONE
GET http://localhost:3000/items/4

### UPDATE
PATCH http://localhost:3000/items/1
Content-Type: application/json

{
  "name": "Alpha v2",
  "quantity": 10
}

### DELETE
DELETE http://localhost:3000/items/1

### GET ONE (expect 404)
GET http://localhost:3000/items/4



###
POST http://localhost:3000/jobs/enqueue
Content-Type: application/json

{
  "userId": 42,
  "payload": "test payload"
}

###

POST http://localhost:3000/testEncrypt/insert
Content-Type: application/json

{
  "name": "test payload",
  "description": "some text"
}

###
# Auth test

GET http://localhost:3000/items

###

GET http://localhost:3000/items/whoami
Authorization: Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiJ1c2VyMTIzIiwicm9sZXMiOlsidXNlciJdLCJpYXQiOjE3NTY3ODE2MzcsImV4cCI6MTc1Njc4NTIzNywiYXVkIjoiYXBpOi8vZGVmYXVsdCIsImlzcyI6Imh0dHA6Ly9sb2NhbGhvc3QvIn0.r5oIeGc8mRy6dUog-k2ozQQFZ4cDZLVyOXYCGvz5aOo
###
GET http://localhost:3000/items
Authorization: Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiJ1c2VyMTIzIiwicm9sZXMiOlsidXNlciJdLCJpYXQiOjE3NTY3ODE2MzcsImV4cCI6MTc1Njc4NTIzNywiYXVkIjoiYXBpOi8vZGVmYXVsdCIsImlzcyI6Imh0dHA6Ly9sb2NhbGhvc3QvIn0.r5oIeGc8mRy6dUog-k2ozQQFZ4cDZLVyOXYCGvz5aOo
###

POST http://localhost:3000/items
Authorization: Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiJhZG1pbjEyMyIsImh0dHBzOi8veW91cmFwcC5leGFtcGxlLmNvbS9yb2xlcyI6WyJhZG1pbiJdLCJhdXRob3JpemF0aW9uIjp7InJvbGVzIjpbImFkbWluIl19LCJyb2xlcyI6WyJhZG1pbiJdLCJpYXQiOjE3NTY3ODEyMjEsImV4cCI6MTc1Njc4NDgyMSwiYXVkIjoiYXBpOi8vZGVmYXVsdCIsImlzcyI6Imh0dHA6Ly9sb2NhbGhvc3QvIn0.UFYHT69ZnnYQbRlIQRnEd5JCIq8s7gpOihgR4KY1aAQ
Content-Type: application/json

{
  "name": "Test item from admin"
}


###
 //Non-admin token [user]
GET http://localhost:3000/items
Authorization: Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiJhZG1pbjEyMyIsImh0dHA6Ly9sb2NhbGhvc3QvIjpbImFkbWluIl0sImlhdCI6MTc1Njc3NTkwNywiZXhwIjoxNzU2NzkwMzA3LCJhdWQiOiJhcGk6Ly9kZWZhdWx0IiwiaXNzIjoiaHR0cDovL2xvY2FsaG9zdC8ifQ.YrsnE3MOKln2grSgoRyZpvIO5TPw7oaon1rURescKDI



node -e "const jwt=require('jsonwebtoken');
const ns=process.env.AUTH0_ROLES_CLAIM_NS||'https://yourapp.example.com/roles';
const payload={ sub:'admin123', [ns]:['user'], authorization:{roles:['user']}, roles:['user'] };
const token=jwt.sign(payload, process.env.JWT_SECRET||'dev-secret', {
  algorithm:'HS256', issuer:'http://localhost/', audience:'api://default', expiresIn:'1h'
});
console.log(token)"


node -e "const jwt=require('jsonwebtoken');
const payload={ sub:'admin123', roles:['admin'] };
const token=jwt.sign(payload, process.env.JWT_SECRET||'dev-secret', {
  algorithm:'HS256', issuer:'http://localhost/', audience:'api://default', expiresIn:'1h'
});
console.log(token)"


node -e "const jwt=require('jsonwebtoken');
const payload={ sub:'user123', roles:['user'] };
const token=jwt.sign(payload, process.env.JWT_SECRET||'dev-secret', {
  algorithm:'HS256', issuer:'http://localhost/', audience:'api://default', expiresIn:'1h'
});
console.log(token)"